Option Public
Option Explicit

Const DAYS_TO_KEEP = 14
Const EXPORT_PATH = "C:\Temp\JaevnerExport\"
Const RUN_PROGRAM_AFTER_EXPORT = True
Const START_PROGRAM_MINIMIZED = True

Const PROGRAM_NAME = "jaevner.exe"

Sub Initialize
	ExportCalendar
End Sub

Sub ExportCalendar
	On Error Goto ErrorCatch
	
	Dim session As New NotesSession
	Dim database As NotesDatabase
	Dim collection As NotesDocumentCollection
	
	Set database = session.CurrentDatabase
	Set collection = database.UnprocessedDocuments
	
	Dim dataLines As Variant
	dataLines = BuildCalendarEntryLines(collection)
	
	Dim fileName As String
	fileName = WriteLinesToFile(dataLines)
	
	If RUN_PROGRAM_AFTER_EXPORT Then
		Dim window
		If START_PROGRAM_MINIMIZED Then
			window = 6
		Else
			window = 8
		End If
		
		Dim result As Integer
		result = Shell(EXPORT_PATH & PROGRAM_NAME & " " & fileName, window)
	End If
	
	Exit Sub
	
ErrorCatch:
	Error Err, Error & Chr(13) + "Module: " & Cstr(Getthreadinfo(1)) & ", Line: " & Cstr(Erl)
	
End Sub

Function BuildCalendarEntryLines(collection As NotesDocumentCollection)
	
	Dim document As NotesDocument
	Dim startDate As NotesDateTime
	Dim endDate As NotesDateTime
	
	Redim lines(0) As String
	
	Dim count As Integer
	count = 0
	
	Set document = collection.GetFirstDocument
	
	Print "Spreading Jaevner over your calendar entries..."
	
	Dim i As Integer
	
	While Not (document Is Nothing)
		For i = 0 To Ubound(document.RepeatDates)
			Set startDate = New NotesDateTime(document.StartDateTime(i))
			
			If document.Repeats(0) = "1" Then
				Set endDate = GetEndDateForRepeatingEntry(document, i, startDate)
			Else
				Set endDate = New NotesDateTime(document.EndDateTime(0))
			End If
			
			If TimeDifferenceInDays(startDate) < DAYS_TO_KEEP Then
				Redim Preserve lines(count) As String					
				lines(count) = BuildLine(document, startDate, endDate)
				count = count + 1
			End If
		Next
		
		Set document = collection.GetNextDocument(document)
	Wend
	
	BuildCalendarEntryLines = lines
	
End Function

Function GetEndDateForRepeatingEntry(document As NotesDocument, index As Variant, startDate As NotesDateTime) As NotesDateTime
	On Error Goto ErrorCatch
	
	Dim endDate As NotesDateTime
	
	Set endDate = New NotesDateTime(document.RepeatEndDates(index))
	
	If endDate.DateOnly = "" Then
		Set endDate = New NotesDateTime(document.EndDateTime(index))
	End If
	
	If endDate.DateOnly = "" Then
		Set endDate = startDate
	End If
	
	Set GetEndDateForRepeatingEntry = endDate
	Exit Function
	
ErrorCatch:
	Resume Next
	
End Function

Function TimeDifferenceInDays(compareDate As NotesDateTime)
	
	Dim timeNow As NotesDateTime
	Set timeNow = New NotesDateTime(Now)
	
	Dim diffInSeconds
	diffInSeconds = timeNow.TimeDifference(compareDate)
	
	Dim diffInDays
	diffInDays = diffInSeconds / 60 / 60 / 24
	
	TimeDifferenceInDays = diffInDays
	
End Function

Function BuildLine(document As NotesDocument, startDate As NotesDateTime, endDate As NotesDateTime) As String
	
	Dim allDayEventFlag As String
	allDayEventFlag = Not (document.AppointmentType(0) <> "2")
	
	Dim description As String
	description = GetDescription(document)
	
	Dim dataLine As String
	
	dataLine = |"| + document.Subject(0) + |","| + startDate.DateOnly + |","| + startDate.TimeOnly + _
	|","| + endDate.DateOnly + |","| + endDate.TimeOnly + |","| + allDayEventFlag +  |","| + document.location(0) + _
	" " + document.ROOM(0) +|","| + description + |","| + document.UniversalID + |"|
	
	BuildLine = dataLine
	
End Function

Function GetDescription(document As NotesDocument) As String
	On Error Goto ErrorCatch	
	
	Dim rtitem As Variant
	Set rtitem = document.GetFirstItem("Body")
	GetDescription = rtitem.Abstract(5000, False, False)
	
	Exit Function
	
ErrorCatch:
	GetDescription = ""
	Resume Next
End Function

Function WriteLinesToFile(lines As Variant) As String
	
	Print "Spreading Jaevner over a file on your hard drive..."
	
	Dim fileDate As String
	fileDate = Format$(Date, "yyyyMMdd") & "-" & Format$(Time, "HHmm")
	
	Dim fileName As String
	fileName = EXPORT_PATH & "NotesCalendar-" + fileDate + ".csv"
	
	Dim fileIndex As Integer
	fileIndex = Freefile()
	
	Open fileName For Output As fileIndex
	
	Dim i As Integer
	
	For i = 0 To Ubound(lines)
		Print #fileIndex, lines(i)
	Next
	
	Close fileIndex
	
	WriteLinesToFile = fileName
	
End Function
